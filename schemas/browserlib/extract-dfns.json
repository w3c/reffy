{
  "$schema": "http://json-schema.org/schema#",
  "$id": "https://github.com/w3c/reffy/blob/main/schemas/browserlib/extract-dfns.json",

  "type": "array",
  "items": {
    "type": "object",
    "additionalProperties": false,
    "required": ["id", "href", "linkingText", "localLinkingText",
      "type", "for", "access", "informative", "heading", "definedIn"],
    "properties": {
      "id": { "$ref": "../common.json#/$defs/id" },
      "href": { "$ref": "../common.json#/$defs/url" },
      "linkingText": {
        "type": "array",
        "items": { "type": "string" }
      },
      "localLinkingText": {
        "type": "array",
        "items": { "type": "string" }
      },
      "type": {
        "type": "string",
        "enum": [
          "property", "descriptor", "value", "type",
          "at-rule", "function", "selector",

          "namespace", "interface", "constructor", "method", "argument",
          "attribute", "callback", "dictionary", "dict-member", "enum",
          "enum-value", "exception", "const", "typedef", "stringifier",
          "serializer", "iterator", "maplike", "setlike", "extended-attribute",
          "event", "permission",

          "element", "element-state", "element-attr", "attr-value",

          "scheme", "http-header",

          "grammar", "abstract-op", "dfn"
        ],
        "$comment": "Types taken from src/browserlib/extract-dfns.mjs"
      },
      "for": {
        "type": "array",
        "items": { "type": "string" }
      },
      "access": {
        "type": "string",
        "enum": ["private", "public"]
      },
      "informative": {
        "type": "boolean"
      },
      "heading": {
        "type": "object",
        "additionalProperties": false,
        "required": ["href", "title"],
        "properties": {
          "id": { "$ref": "../common.json#/$defs/id" },
          "href": { "$ref": "../common.json#/$defs/url" },
          "title": { "type": "string" },
          "number": { "$ref": "../common.json#/$defs/headingNumber" }
        }
      },
      "definedIn": {
        "type": "string"
      }
    }
  }
}
